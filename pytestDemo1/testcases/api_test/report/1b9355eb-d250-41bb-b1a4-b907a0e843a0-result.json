{"name": "测试数据：【 90100010，123456，False，1003，用户名不存在】", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <testcases.api_test.test_03_login.TestUserLogin object at 0x0000000004316E80>\nusername = '90100010', password = '123456', except_result = False\nexcept_code = 1003, except_msg = '用户名不存在'\n\n    @allure.story(\"用例--登录用户\")\n    @allure.description(\"该用例是针对获取用户登录接口的测试\")\n    @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"测试数据：【 {username}，{password}，{except_result}，{except_code}，{except_msg}】\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"username, password, except_result, except_code, except_msg\",\n                             api_data[\"test_login_user\"])\n    def test_login_user(self, username, password, except_result, except_code, except_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n>       result = login_user(username, password)\n\ntest_03_login.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\operation\\user.py:92: in login_user\n    if res.json()[\"code\"] == 0:\n..\\..\\..\\lib\\site-packages\\requests\\models.py:897: in json\n    return complexjson.loads(self.text, **kwargs)\n..\\..\\..\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\n..\\..\\..\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000000003833860>\ns = '<!doctype html><html lang=\"en\" data-server-rendered=\"true\"><head><title>Tiens</title> <meta charset=\"utf-8\"> <meta ht...avascript\" src=\"https://dev-front-static.tiens.com/cms/public/js/chunk/common/404.572f4a23.js\"></script></body></html>'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n..\\..\\..\\lib\\json\\decoder.py:355: JSONDecodeError"}, "description": "该用例是针对获取用户登录接口的测试", "attachments": [{"name": "log", "source": "3087e497-9d51-4d43-b939-2103e22c6c40-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'90100010'"}, {"name": "password", "value": "'123456'"}, {"name": "except_result", "value": "False"}, {"name": "except_code", "value": "1003"}, {"name": "except_msg", "value": "'用户名不存在'"}], "start": 1663315068484, "stop": 1663315068644, "uuid": "e55c19f4-da34-4960-8554-32852beae43a", "historyId": "73d08143b464376ac1cfd5e700d45dc1", "testCaseId": "7272db244dabef390096479ae3196642", "fullName": "testcases.api_test.test_03_login.TestUserLogin#test_login_user", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "severity", "value": "normal"}, {"name": "story", "value": "用例--登录用户"}, {"name": "feature", "value": "用户登录模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_03_login"}, {"name": "subSuite", "value": "TestUserLogin"}, {"name": "host", "value": "Hurricane-PC"}, {"name": "thread", "value": "12332-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_03_login"}], "links": [{"type": "test_case", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应BUG的链接地址"}]}