{"name": "测试数据：【 {username}，{password}，{except_result}，10000，num】", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcases.api_test.test_03_login.TestUserLogin object at 0x000002182278E240>\nis_point = {'is_point': False}, is_start_package = {'is_start_package': False}\norder_type = {'order_type': 1}, qty = {'qty': 1}\nsku_id = {'sku_id': '10860172'}, is_limit = {'is_limit': False}\nexcept_code = 10000, except_msg = 'num'\nheaders = {'Content-Type': 'application/json', 'select_nation_id': 'RU', 'shop_id': 'RU998001', 'shoppingcartid': '-1', ...}\nurl = '/order-aggr/api/shopping_cart/add', extract = ''\n\n    @allure.story(\"用例--商品加入购物车\")\n    @allure.description(\"该用例是用户登录成功后，将商品加入购物车\")\n    @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"测试数据：【 {username}，{password}，{except_result}，{except_code}，{except_msg}】\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"is_point, is_start_package, order_type, qty, sku_id, is_limit,except_code, except_msg,headers, url,extract\",\n                             api_data[\"test_shoppingcart_add\"])\n    def test_shoppingcart_add(self, is_point, is_start_package, order_type, qty, sku_id, is_limit,except_code, except_msg,headers, url,extract):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = shoppingcart_add(is_point, is_start_package, order_type, qty, sku_id, is_limit, headers, url)\n        step_1(sku_id)\n        result = result.response.json()\n        logger.info(\"code ==>> 期望结果：{}， 实际结果：【 {} 】\".format(except_code, result.get(\"code\")))\n>       assert_validate(except_msg, result, extract)\n\ntest_03_login.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexcept_msg = 'num'\nresult = '{\"code\": 50000, \"msg\": \"JSON parse error: Cannot deserialize instance of `java.lang.Boolean` out of START_OBJECT toke... 14] (through reference chain: com.tiens.lark.order.api.model.CreateShoppingCartRequest[\\\\\"is_point\\\\\"])\", \"data\": \"\"}'\nextract = ''\n\n    def assert_validate(except_msg,result,extract):\n        \"\"\"\n            断言封装\n            :validate: 断言\n            :result: 返回结果\n            :extract: 取值\n           \"\"\"\n    \n        result = json.dumps(result)\n        # logger.info(\"assert--result==>>结果是：{}\".format(result))\n>       assert str(except_msg) in result\nE       AssertionError\n\n..\\..\\operation\\user.py:143: AssertionError"}, "description": "该用例是用户登录成功后，将商品加入购物车", "steps": [{"name": "步骤1 ==>> 登录用户", "status": "passed", "parameters": [{"name": "username", "value": "{'sku_id': '10860172'}"}], "start": 1669532487522, "stop": 1669532487522}], "attachments": [{"name": "log", "source": "2250f53f-fc26-4cb2-9396-752b086630da-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "is_point", "value": "{'is_point': False}"}, {"name": "is_start_package", "value": "{'is_start_package': False}"}, {"name": "order_type", "value": "{'order_type': 1}"}, {"name": "qty", "value": "{'qty': 1}"}, {"name": "sku_id", "value": "{'sku_id': '10860172'}"}, {"name": "is_limit", "value": "{'is_limit': False}"}, {"name": "except_code", "value": "10000"}, {"name": "except_msg", "value": "'num'"}, {"name": "headers", "value": "{'tiens_token': '${tiens_token}', 'user_id': '${user_id}', 'shop_id': 'RU998001', 'shoppingcartid': '-1', 'Content-Type': 'application/json', 'select_nation_id': 'RU'}"}, {"name": "url", "value": "'/order-aggr/api/shopping_cart/add'"}, {"name": "extract", "value": "''"}], "start": 1669532487254, "stop": 1669532487522, "uuid": "334a1e35-ee07-4295-91c5-e9a493457f9d", "historyId": "59c0df2c882c35e6fd17555401062b4f", "testCaseId": "c2627fadef5782f05006cf89205e040d", "fullName": "testcases.api_test.test_03_login.TestUserLogin#test_shoppingcart_add", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "feature", "value": "用户登录模块"}, {"name": "severity", "value": "normal"}, {"name": "story", "value": "用例--商品加入购物车"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_03_login"}, {"name": "subSuite", "value": "TestUserLogin"}, {"name": "host", "value": "lijuan"}, {"name": "thread", "value": "4328-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_03_login"}], "links": [{"type": "test_case", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应BUG的链接地址"}]}