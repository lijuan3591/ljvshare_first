{"name": "测试数据：【 {username}，{password}，{except_result}，10000，checkout_id】", "status": "broken", "statusDetails": {"message": "TypeError: can only join an iterable", "trace": "self = <testcases.api_test.test_03_login.TestUserLogin object at 0x000001A34B57F908>\ncheckout_id = '${checkout_id}', note = '', except_code = 10000\nexcept_msg = 'checkout_id'\nheaders = {'Content-Type': 'application/json', 'curr_code': 'RUB', 'select_nation_id': 'RU', 'shop_id': 'RU998001', ...}\nurl = '/order-aggr/api/checkout/go_pay'\nextract = {'goodsorderid': '$..orderNo', 'orderId': '$..orderId', 'url': '$..url'}\n\n    @allure.story(\"用例--结算页跳转收银台\")\n    @allure.description(\"该用例是用户登录成功后，结算页跳转收银台\")\n    @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"测试数据：【 {username}，{password}，{except_result}，{except_code}，{except_msg}】\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"checkout_id,note,except_code, except_msg, headers, url, extract\",api_data[\"test_go_pay\"])\n    def test_go_pay(self, checkout_id,note,except_code, except_msg, headers, url, extract):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = go_pay(checkout_id, note, headers, url)\n        step_1(url)\n        result = result.response.json()\n        logger.info(\"code ==>> 期望结果：{}， 实际结果：【 {} 】\".format(except_code, result.get(\"code\")))\n>       assert_validate(except_msg, result, extract)\n\ntest_03_login.py:132: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexcept_msg = 'checkout_id'\nresult = {'code': 50000, 'data': '', 'msg': '参数[checkout_id]类型错误'}\nextract = {'goodsorderid': '$..orderNo', 'orderId': '$..orderId', 'url': '$..url'}\n\n    def assert_validate(except_msg,result,extract):\n        \"\"\"\n            断言封装\n            :validate: 断言\n            :result: 返回结果\n            :extract: 取值\n           \"\"\"\n    \n        result = json.dumps(result)\n        # logger.info(\"assert--result==>>结果是：{}\".format(result))\n        assert str(except_msg) in result\n        logger.info(\"assert==>>结果是：断言成功\")\n        result = json.loads(result)\n        if extract and isinstance(extract, dict):\n            for key,value in extract.items():\n>               ReadFileData().write_extract_yaml({str(key): ''.join(jsonpath(result,value))})\nE               TypeError: can only join an iterable\n\n..\\..\\operation\\user.py:207: TypeError"}, "description": "该用例是用户登录成功后，结算页跳转收银台", "steps": [{"name": "步骤1 ==>> 登录用户", "status": "passed", "parameters": [{"name": "username", "value": "'/order-aggr/api/checkout/go_pay'"}], "start": 1669780276150, "stop": 1669780276150}], "attachments": [{"name": "log", "source": "fd20d49c-d457-493c-8fcf-016395e03520-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "checkout_id", "value": "'${checkout_id}'"}, {"name": "note", "value": "''"}, {"name": "except_code", "value": "10000"}, {"name": "except_msg", "value": "'checkout_id'"}, {"name": "headers", "value": "{'tiens_token': '${tiens_token}', 'user_id': '${user_id}', 'shop_id': 'RU998001', 'shoppingcartid': '-1', 'Content-Type': 'application/json', 'select_nation_id': 'RU', 'curr_code': 'RUB'}"}, {"name": "url", "value": "'/order-aggr/api/checkout/go_pay'"}, {"name": "extract", "value": "{'goodsorderid': '$..orderNo', 'orderId': '$..orderId', 'url': '$..url'}"}], "start": 1669780276132, "stop": 1669780276151, "uuid": "f037b359-1f50-41d2-8b13-289bae1cc70f", "historyId": "413a97dea3ef769574fb83e8199a2196", "testCaseId": "6b6a929ca5f50c5236654c570688d745", "fullName": "testcases.api_test.test_03_login.TestUserLogin#test_go_pay", "labels": [{"name": "severity", "value": "normal"}, {"name": "story", "value": "用例--结算页跳转收银台"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "feature", "value": "用户登录模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_03_login"}, {"name": "subSuite", "value": "TestUserLogin"}, {"name": "host", "value": "lijuan"}, {"name": "thread", "value": "14880-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_03_login"}], "links": [{"type": "test_case", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应BUG的链接地址"}]}