{"name": "测试数据：【 {username}，{password}，{except_result}，{except_code}，{except_msg}】", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'text'", "trace": "self = <testcases.api_test.test_03_login.TestUserLogin object at 0x00000234D85B2BE0>\ncaseinfo = {'extract': {'token': 'token', 'user_id': 'user_id'}, 'name': '获得统一的鉴权码token', 'request': {'data': {'login_type': 1, '...ation/json', 'select_nation_id': 'RU'}, 'method': 'post', 'url': '/idserverhq/public/auth/login'}, 'validate': 'token'}\n\n    @allure.story(\"用例--登录用户\")\n    @allure.description(\"该用例是针对获取用户登录接口的测试\")\n    @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"测试数据：【 {username}，{password}，{except_result}，{except_code}，{except_msg}】\")\n    @pytest.mark.single\n    # @pytest.mark.parametrize(\"username, password, login_type, except_code, except_msg\",\n    #                          api_data[\"test_login_user\"])\n    @pytest.mark.parametrize('caseinfo', api_data1)\n    # def test_login_user(self, username, password, login_type, except_code, except_msg):\n    # def test_login_user(self, username, password, login_type, except_code, except_msg):\n    #     logger.info(\"*************** 开始执行用例 ***************\")\n    #     result = login_user(username, password, login_type)\n    #     step_1(username)\n    #     assert result.response.status_code == 200\n    #     logger.info(\"code ==>> 期望结果：{}， 实际结果：【 {} 】\".format(except_code, result.response.json().get(\"code\")))\n    #     assert result.response.json().get(\"code\") == except_code\n    #     assert except_msg in result.response.text\n    #     logger.info(\"*************** 结束执行用例 ***************\")\n    def test_login_user(self, caseinfo):\n        logger.info(\"*************** 开始执行用例 ***************\")\n>       login_user(caseinfo)\n\ntest_03_login.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncaseinfo = {'extract': {'token': 'token', 'user_id': 'user_id'}, 'name': '获得统一的鉴权码token', 'request': {'data': {'login_type': 1, '...ation/json', 'select_nation_id': 'RU'}, 'method': 'post', 'url': '/idserverhq/public/auth/login'}, 'validate': 'token'}\n\n    def login_user(caseinfo):\n    \n        \"\"\"\n        登录用户\n        :param username: 用户名\n        :param password: 密码\n        :return: 自定义的关键字返回结果 result\n        \"\"\"\n    \n        result = ResultBase()\n        # payload = {\n        #     \"username\": username,\n        #     \"password\": password,\n        #     \"login_type\": login_type\n        # }\n        # header = {\n        #     \"Content-Type\": \"application/json\"\n        # }\n        # method = caseinfo['request']['method']\n        url = caseinfo['request']['url']\n        headers = caseinfo['request']['headers']\n        data = caseinfo['request']['data']\n        validate = caseinfo['validate']\n        extract = caseinfo['extract']\n        # result = RequestsUtil().send_request(method, url, data, headers)\n        # result = json.loads(result)\n        print(caseinfo)\n        logger.info(\"*************** 开始执行用例 ***************\")\n        # res = user.login(method=method,url=url,json=data, headers=headers)\n        res = RestClient().post(url=url,data=None,json=data, headers=headers)\n        logger.info(\"登录用户 ==>> 返回结果 ==>> {}\".format(res))\n        # if \"token\" in res.text:\n>       if validate in res.text:\nE       AttributeError: 'NoneType' object has no attribute 'text'\n\n..\\..\\operation\\user.py:115: AttributeError"}, "description": "该用例是针对获取用户登录接口的测试", "attachments": [{"name": "log", "source": "2a0c4058-d734-48a1-852f-85cc554dcde2-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseinfo", "value": "{'name': '获得统一的鉴权码token', 'request': {'method': 'post', 'url': '/idserverhq/public/auth/login', 'data': {'login_type': 1, 'username': 1532341, 'password': '111111a'}, 'headers': {'select_nation_id': 'RU', 'Content-Type': 'application/json'}}, 'extract': {'token': 'token', 'user_id': 'user_id'}, 'validate': 'token'}"}], "start": 1669271811643, "stop": 1669271811644, "uuid": "3568b500-b60b-48b3-bb82-5aad6704d80a", "historyId": "9b085eed0f3663b09cb8fd31c83ef666", "testCaseId": "7272db244dabef390096479ae3196642", "fullName": "testcases.api_test.test_03_login.TestUserLogin#test_login_user", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "用户登录模块"}, {"name": "story", "value": "用例--登录用户"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_03_login"}, {"name": "subSuite", "value": "TestUserLogin"}, {"name": "host", "value": "lijuan"}, {"name": "thread", "value": "15004-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_03_login"}], "links": [{"type": "test_case", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应BUG的链接地址"}]}