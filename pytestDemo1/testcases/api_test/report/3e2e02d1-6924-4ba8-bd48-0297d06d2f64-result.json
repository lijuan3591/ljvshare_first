{"name": "测试数据：【 {username}，{password}，{except_result}，{except_code}，{except_msg}】", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'json'", "trace": "self = <testcases.api_test.test_03_login.TestUserLogin object at 0x0000020D3813D7F0>\ncaseinfo = {'extract': {'token': 'token', 'user_id': 'user_id'}, 'name': '获得统一的鉴权码token', 'request': {'data': {'login_type': 1, '...ation/json', 'select_nation_id': 'RU'}, 'method': 'post', 'url': '/idserverhq/public/auth/login'}, 'validate': 'token'}\n\n    @allure.story(\"用例--登录用户\")\n    @allure.description(\"该用例是针对获取用户登录接口的测试\")\n    @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"测试数据：【 {username}，{password}，{except_result}，{except_code}，{except_msg}】\")\n    @pytest.mark.single\n    # @pytest.mark.parametrize(\"username, password, login_type, except_code, except_msg\",\n    #                          api_data[\"test_login_user\"])\n    @pytest.mark.parametrize('caseinfo', api_data1)\n    # def test_login_user(self, username, password, login_type, except_code, except_msg):\n    # def test_login_user(self, username, password, login_type, except_code, except_msg):\n    #     logger.info(\"*************** 开始执行用例 ***************\")\n    #     result = login_user(username, password, login_type)\n    #     step_1(username)\n    #     assert result.response.status_code == 200\n    #     logger.info(\"code ==>> 期望结果：{}， 实际结果：【 {} 】\".format(except_code, result.response.json().get(\"code\")))\n    #     assert result.response.json().get(\"code\") == except_code\n    #     assert except_msg in result.response.text\n    #     logger.info(\"*************** 结束执行用例 ***************\")\n    def test_login_user(self, caseinfo):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = login_user(caseinfo)\n>       assert_validate(caseinfo['validate'], result, caseinfo['extract'])\n\ntest_03_login.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nvalidate = 'token'\nresult = <core.result_base.ResultBase object at 0x0000020D3813D9E8>\nextract = {'token': 'token', 'user_id': 'user_id'}\n\n    def assert_validate(validate,result,extract):\n        \"\"\"\n            断言封装\n            :validate: 断言\n            :result: 返回结果\n            :extract: 取值\n           \"\"\"\n    \n            # for key, value in headers.items():\n            #     if str(value).startswith('${') and str(value).endswith('}'):\n            #         headers[str(key)] = ReadFileData().read_extract_yaml(str(key))\n            #     else:\n            #         headers[str(key)] = str(value)\n        # for val in validate:\n            # assert val['eq']['code'] == result.response.json()['code']\n        # assert validate in result.response.text\n    \n        # if ''.join(validate['eq']['code']) == result.response.json()['code']:\n        # if result.response.json()['code'] == 10000:\n        if extract and isinstance(extract, dict):\n            for key,value in extract.items():\n>               ReadFileData().write_extract_yaml({str(key): result.response.json().get(str(value))})\nE               AttributeError: 'NoneType' object has no attribute 'json'\n\n..\\..\\operation\\user.py:152: AttributeError"}, "description": "该用例是针对获取用户登录接口的测试", "attachments": [{"name": "log", "source": "16be074a-c334-4e6d-9e01-dc1ca7bec73d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseinfo", "value": "{'name': '获得统一的鉴权码token', 'request': {'method': 'post', 'url': '/idserverhq/public/auth/login', 'data': {'login_type': 1, 'username': 1532341, 'password': '111111a'}, 'headers': {'select_nation_id': 'RU', 'Content-Type': 'application/json'}}, 'extract': {'token': 'token', 'user_id': 'user_id'}, 'validate': 'token'}"}], "start": 1669271362557, "stop": 1669271362557, "uuid": "50627c76-d5f8-44e7-ae9b-fe8a5aee84bc", "historyId": "9b085eed0f3663b09cb8fd31c83ef666", "testCaseId": "7272db244dabef390096479ae3196642", "fullName": "testcases.api_test.test_03_login.TestUserLogin#test_login_user", "labels": [{"name": "epic", "value": "针对单个接口的测试"}, {"name": "severity", "value": "normal"}, {"name": "story", "value": "用例--登录用户"}, {"name": "feature", "value": "用户登录模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_03_login"}, {"name": "subSuite", "value": "TestUserLogin"}, {"name": "host", "value": "lijuan"}, {"name": "thread", "value": "8472-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_03_login"}], "links": [{"type": "test_case", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应BUG的链接地址"}]}