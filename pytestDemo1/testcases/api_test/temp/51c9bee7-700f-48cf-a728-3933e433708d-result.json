{"name": "测试数据：【 ${goodsorderid}，tiens-pay-testpay-b2c，https://dev2-cashier-uih5.tiens.com，10000，url,{'tiens_token': '${tiens_token}', 'user_id': '${user_id}', 'shop_id': 'RU998001', 'shoppingcartid': '-1', 'Content-Type': 'application/json', 'select_nation_id': 'RU', 'tenant_id': '${tenant_id}', 'tiens_code': '${tiens_code}'},/cashier/api/pay/create_order,】", "status": "broken", "statusDetails": {"message": "KeyError: 'tenant_id'", "trace": "self = <testcases.api_test.test_03_login.TestUserLogin object at 0x00000273C2B05400>\ngoodsorderid = '${goodsorderid}', channel_code = 'tiens-pay-testpay-b2c'\nsourcehost = 'https://dev2-cashier-uih5.tiens.com', except_code = 10000\nexcept_msg = 'url'\nheaders = {'Content-Type': 'application/json', 'select_nation_id': 'RU', 'shop_id': 'RU998001', 'shoppingcartid': '-1', ...}\nurl = '/cashier/api/pay/create_order', extract = ''\n\n    @allure.story(\"用例--创建订单\")\n    @allure.description(\"该用例是用户登录成功后，创建订单\")\n    @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"测试数据：【 {goodsorderid}，{channel_code}，{sourcehost}，{except_code}，{except_msg},{headers},{url},{extract}】\")\n    @pytest.mark.single\n    @pytest.mark.smoke\n    @pytest.mark.usefixtures(\"select_user_order\")\n    @pytest.mark.parametrize(\"goodsorderid,channel_code,sourcehost,except_code, except_msg, headers, url, extract\",api_data[\"test_create_order\"])\n    def test_create_order(self, goodsorderid,channel_code,sourcehost,except_code, except_msg, headers, url, extract):\n        logger.info(\"*************** 开始执行用例 ***************\")\n>       result = create_order(goodsorderid,channel_code,sourcehost,headers, url)\n\ntest_03_login.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\operation\\user.py:204: in create_order\n    res = user.create_order(json=json_data,headers=header, url=url)\n..\\..\\api\\user.py:48: in create_order\n    return self.post(url, **kwargs)\n..\\..\\core\\rest_client.py:21: in post\n    return self.request(url, \"POST\", data, json, **kwargs)\n..\\..\\core\\rest_client.py:54: in request\n    headers[str(key)] = ReadFileData().read_extract_yaml(str(key))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.read_data.ReadFileData object at 0x00000273C34409E8>\nkey = 'tenant_id'\n\n    def read_extract_yaml(self, key):\n        with open(os.getcwd() + \"/extract.yml\", mode='r', encoding='utf-8') as f:\n            value = yaml.load(stream=f, Loader=yaml.FullLoader)\n>           return value[key]\nE           KeyError: 'tenant_id'\n\n..\\..\\common\\read_data.py:48: KeyError"}, "description": "该用例是用户登录成功后，创建订单", "attachments": [{"name": "log", "source": "5a493277-d5bc-470d-8a0b-63afea87ca8b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "goodsorderid", "value": "'${goodsorderid}'"}, {"name": "channel_code", "value": "'tiens-pay-testpay-b2c'"}, {"name": "sourcehost", "value": "'https://dev2-cashier-uih5.tiens.com'"}, {"name": "except_code", "value": "10000"}, {"name": "except_msg", "value": "'url'"}, {"name": "headers", "value": "{'tiens_token': '${tiens_token}', 'user_id': '${user_id}', 'shop_id': 'RU998001', 'shoppingcartid': '-1', 'Content-Type': 'application/json', 'select_nation_id': 'RU', 'tenant_id': '${tenant_id}', 'tiens_code': '${tiens_code}'}"}, {"name": "url", "value": "'/cashier/api/pay/create_order'"}, {"name": "extract", "value": "''"}], "start": 1669860604131, "stop": 1669860604132, "uuid": "59963123-752e-4bb9-bfef-212ffba8c75b", "historyId": "0221c7f712de915906561060fd4e6e70", "testCaseId": "5832e4e5687af79ed4e67c34c4887604", "fullName": "testcases.api_test.test_03_login.TestUserLogin#test_create_order", "labels": [{"name": "epic", "value": "针对VShare主流程的接口测试"}, {"name": "story", "value": "用例--创建订单"}, {"name": "feature", "value": "用户登录模块"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "@pytest.mark.usefixtures('select_user_order')"}, {"name": "tag", "value": "smoke"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_03_login"}, {"name": "subSuite", "value": "TestUserLogin"}, {"name": "host", "value": "lijuan"}, {"name": "thread", "value": "14392-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_03_login"}], "links": [{"type": "test_case", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应BUG的链接地址"}]}