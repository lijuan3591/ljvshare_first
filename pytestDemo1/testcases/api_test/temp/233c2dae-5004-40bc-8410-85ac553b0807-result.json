{"name": "测试数据：【 1，0，1，10000，checkout_id,{'tiens_token': '${tiens_token}', 'user_id': '${user_id}', 'shop_id': 'RU998001', 'shoppingcartid': '-1', 'Content-Type': 'application/json', 'select_nation_id': 'RU'},/order-aggr/api/checkout,{'checkout_id': '$..checkout_id'}】", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcases.api_test.test_03_login.TestUserLogin object at 0x00000273C2ABCBE0>\norder_type = 1, pickup_type = 0, shopping_user_checktype = 1\nexcept_code = 10000, except_msg = 'checkout_id'\nheaders = {'Content-Type': 'application/json', 'select_nation_id': 'RU', 'shop_id': 'RU998001', 'shoppingcartid': '-1', ...}\nurl = '/order-aggr/api/checkout', extract = {'checkout_id': '$..checkout_id'}\n\n    @allure.story(\"用例--获取购物车生成的checkoutID\")\n    @allure.description(\"该用例是用户登录成功后，获取购物车生成的checkoutID\")\n    @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"测试数据：【 {order_type}，{pickup_type}，{shopping_user_checktype}，{except_code}，{except_msg},{headers},{url},{extract}】\")\n    @pytest.mark.single\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\n        \"order_type,pickup_type,shopping_user_checktype,except_code, except_msg, headers, url, extract\",\n        api_data[\"test_get_checkoutid\"])\n    def test_get_checkoutid(self, order_type, pickup_type, shopping_user_checktype, except_code, except_msg, headers, url, extract):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = get_checkoutid(order_type, pickup_type, shopping_user_checktype, headers, url)\n        step_1(url)\n        result = result.response.json()\n        logger.info(\"code ==>> 期望结果：{}， 实际结果：【 {} 】\".format(except_code, result.get(\"code\")))\n>       assert_validate(except_msg, result, extract)\n\ntest_03_login.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexcept_msg = 'checkout_id'\nresult = '{\"code\": 50000, \"msg\": \"Shopping cart is empty!\", \"data\": \"\"}'\nextract = {'checkout_id': '$..checkout_id'}\n\n    def assert_validate(except_msg,result,extract):\n        \"\"\"\n            断言封装\n            :validate: 断言\n            :result: 返回结果\n            :extract: 取值\n           \"\"\"\n    \n        result = json.dumps(result)\n        # logger.info(\"assert--result==>>结果是：{}\".format(result))\n>       assert str(except_msg) in result\nE       AssertionError\n\n..\\..\\operation\\user.py:223: AssertionError"}, "description": "该用例是用户登录成功后，获取购物车生成的checkoutID", "steps": [{"name": "步骤1 ==>> 登录用户", "status": "passed", "parameters": [{"name": "username", "value": "'/order-aggr/api/checkout'"}], "start": 1669860604052, "stop": 1669860604053}], "attachments": [{"name": "log", "source": "ea6f2237-0d81-4fd2-a025-85c202d92954-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "order_type", "value": "1"}, {"name": "pickup_type", "value": "0"}, {"name": "shopping_user_checktype", "value": "1"}, {"name": "except_code", "value": "10000"}, {"name": "except_msg", "value": "'checkout_id'"}, {"name": "headers", "value": "{'tiens_token': '${tiens_token}', 'user_id': '${user_id}', 'shop_id': 'RU998001', 'shoppingcartid': '-1', 'Content-Type': 'application/json', 'select_nation_id': 'RU'}"}, {"name": "url", "value": "'/order-aggr/api/checkout'"}, {"name": "extract", "value": "{'checkout_id': '$..checkout_id'}"}], "start": 1669860603935, "stop": 1669860604053, "uuid": "cebef687-f5a7-4931-a0ff-fe6319364060", "historyId": "2032c81d10c57be70fd04886647097c2", "testCaseId": "499094819f1dd2c48c241215e4100b56", "fullName": "testcases.api_test.test_03_login.TestUserLogin#test_get_checkoutid", "labels": [{"name": "epic", "value": "针对VShare主流程的接口测试"}, {"name": "story", "value": "用例--获取购物车生成的checkoutID"}, {"name": "feature", "value": "用户登录模块"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "smoke"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_03_login"}, {"name": "subSuite", "value": "TestUserLogin"}, {"name": "host", "value": "lijuan"}, {"name": "thread", "value": "14392-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_03_login"}], "links": [{"type": "test_case", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应BUG的链接地址"}]}